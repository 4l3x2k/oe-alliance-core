Index: kernel-source/drivers/media/dvb-core/dmxdev.c
===================================================================
--- a/drivers/media/dvb-core/dmxdev.c
+++ b/drivers/media/dvb-core/dmxdev.c
@@ -82,7 +82,11 @@ static ssize_t dvb_dmxdev_buffer_read(st
 
 		ret = wait_event_interruptible(src->queue,
 					       !dvb_ringbuffer_empty(src) ||
-					       (src->error != 0));
+					       (src->error != 0) ||
+					       (src->do_wait != 1));
+		if (src->do_wait != 1)
+			ret = -EINTR;
+
 		if (ret < 0)
 			break;
 
@@ -957,6 +961,23 @@ dvb_demux_read(struct file *file, char _
 	return ret;
 }
 
+
+static int dvb_demux_lock_filter(struct dmxdev_filter *dmxdevfilter)
+{
+       int ret;
+
+       dmxdevfilter->buffer.do_wait = 0;
+
+       if (waitqueue_active(&dmxdevfilter->buffer.queue))
+               wake_up(&dmxdevfilter->buffer.queue);
+
+       ret = mutex_lock_interruptible(&dmxdevfilter->mutex);
+
+       dmxdevfilter->buffer.do_wait = 1;
+
+       return ret;
+}
+
 static int dvb_demux_do_ioctl(struct file *file,
 			      unsigned int cmd, void *parg)
 {
@@ -970,7 +991,7 @@ static int dvb_demux_do_ioctl(struct fil
 
 	switch (cmd) {
 	case DMX_START:
-		if (mutex_lock_interruptible(&dmxdevfilter->mutex)) {
+		if (dvb_demux_lock_filter(dmxdevfilter)) {
 			mutex_unlock(&dmxdev->mutex);
 			return -ERESTARTSYS;
 		}
@@ -982,7 +1003,7 @@ static int dvb_demux_do_ioctl(struct fil
 		break;
 
 	case DMX_STOP:
-		if (mutex_lock_interruptible(&dmxdevfilter->mutex)) {
+		if (dvb_demux_lock_filter(dmxdevfilter)) {
 			mutex_unlock(&dmxdev->mutex);
 			return -ERESTARTSYS;
 		}
@@ -991,7 +1012,7 @@ static int dvb_demux_do_ioctl(struct fil
 		break;
 
 	case DMX_SET_FILTER:
-		if (mutex_lock_interruptible(&dmxdevfilter->mutex)) {
+		if (dvb_demux_lock_filter(dmxdevfilter)) {
 			mutex_unlock(&dmxdev->mutex);
 			return -ERESTARTSYS;
 		}
@@ -1000,7 +1021,7 @@ static int dvb_demux_do_ioctl(struct fil
 		break;
 
 	case DMX_SET_PES_FILTER:
-		if (mutex_lock_interruptible(&dmxdevfilter->mutex)) {
+		if (dvb_demux_lock_filter(dmxdevfilter)) {
 			mutex_unlock(&dmxdev->mutex);
 			return -ERESTARTSYS;
 		}
@@ -1009,7 +1030,7 @@ static int dvb_demux_do_ioctl(struct fil
 		break;
 
 	case DMX_SET_BUFFER_SIZE:
-		if (mutex_lock_interruptible(&dmxdevfilter->mutex)) {
+		if (dvb_demux_lock_filter(dmxdevfilter)) {
 			mutex_unlock(&dmxdev->mutex);
 			return -ERESTARTSYS;
 		}
@@ -1053,7 +1074,7 @@ static int dvb_demux_do_ioctl(struct fil
 		break;
 
 	case DMX_ADD_PID:
-		if (mutex_lock_interruptible(&dmxdevfilter->mutex)) {
+		if (dvb_demux_lock_filter(dmxdevfilter)) {
 			ret = -ERESTARTSYS;
 			break;
 		}
@@ -1062,7 +1083,7 @@ static int dvb_demux_do_ioctl(struct fil
 		break;
 
 	case DMX_REMOVE_PID:
-		if (mutex_lock_interruptible(&dmxdevfilter->mutex)) {
+		if (dvb_demux_lock_filter(dmxdevfilter)) {
 			ret = -ERESTARTSYS;
 			break;
 		}
Index: kernel-source/drivers/media/dvb-core/dvb_ringbuffer.c
===================================================================
--- a/drivers/media/dvb-core/dvb_ringbuffer.c
+++ b/drivers/media/dvb-core/dvb_ringbuffer.c
@@ -45,6 +45,7 @@ void dvb_ringbuffer_init(struct dvb_ring
 	rbuf->data=data;
 	rbuf->size=len;
 	rbuf->error=0;
+	rbuf->do_wait=1;
 
 	init_waitqueue_head(&rbuf->queue);
 
Index: kernel-source/drivers/media/dvb-core/dvb_ringbuffer.h
===================================================================
--- a/drivers/media/dvb-core/dvb_ringbuffer.h
+++ b/drivers/media/dvb-core/dvb_ringbuffer.h
@@ -38,6 +38,7 @@ struct dvb_ringbuffer {
 	int               error;
 
 	wait_queue_head_t queue;
+	int               do_wait;
 	spinlock_t        lock;
 };
 
